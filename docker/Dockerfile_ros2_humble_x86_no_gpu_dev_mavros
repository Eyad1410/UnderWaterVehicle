#docker build -t hub.ci.dfl.ae/roboticslab/ros2_humble_x86_no_gpu:dev --build-arg SSH_PRIVATE_KEY="`cat ~/.ssh/id_rsa`" . -f Dockerfile_ros2_humble_x86_no_gpu_dev
FROM ubuntu:22.04

RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

RUN apt-get update

RUN apt-get install -y apt-utils && apt-get install -y curl gnupg2 && apt-get install -y lsb-release && apt-get clean all

ARG SSH_PRIVATE_KEY
RUN mkdir ~/.ssh/
RUN echo "${SSH_PRIVATE_KEY}" >> ~/.ssh/id_rsa
RUN chmod 0700 ~/.ssh/id_rsa

RUN apt-get -y update \ 
    && apt-get -y install openssh-client
    
# make sure github domain is accepted
RUN touch ~/.ssh/known_hosts
RUN ssh-keyscan -H github.com >> ~/.ssh/known_hosts
RUN echo "Host *.trabe.io\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config


# --- ROS2 Humble Installation
RUN locale  # check for UTF-8

RUN apt update && apt install -y locales
RUN locale-gen en_US en_US.UTF-8
RUN update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

RUN echo "export LANG=en_US.UTF-8" >> /root/.bashrc

RUN locale  # verify settings

RUN apt install -y software-properties-common
RUN add-apt-repository universe
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg

RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt-get update && apt-get install -y git

RUN apt install -y ros-humble-desktop

# Install colcon
RUN apt install -y python3-colcon-common-extensions
# --- Humble has been installed


#install some tool
RUN apt update && apt install -y nano openssh-server iputils-ping net-tools htop build-essential usbutils


#pip
RUN apt install -y python3-pip

RUN pip3 install pyproj requests paho-mqtt

RUN apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

#mavros
RUN apt install -y libasio-dev ros-humble-mavlink ros-humble-geographic-msgs libeigen-stl-containers-dev ros-humble-diagnostic-updater libgeographic-dev
RUN bash -c "cd /tmp && git clone https://github.com/geographiclib/geographiclib.git && cd geographiclib && mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release && make install"
RUN bash -c "cd /tmp && git clone https://github.com/mavlink/mavros.git && ./mavros/mavros/scripts/install_geographiclib_datasets.sh"
RUN bash -c "ln -s /usr/local/share/GeographicLib /usr/share/GeographicLib"

#colcon build command in bash
RUN echo "function ws_build(){\ncolcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release\n}" >> ~/.bashrc

RUN rm /root/.ssh/id_rsa \
    && rm ~/.ssh/known_hosts \
    && rm ~/.ssh/config

